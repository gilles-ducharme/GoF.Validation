init[data_List] := Module[{},
   n = Length[data];
   datasorted = Sort[data];
   weigthBCMR = 
    N[Table[(PDF[NormalDistribution[], 
         If[i == 1, -50., 
          Quantile[NormalDistribution[], (i - 1)/n]]] - 
        PDF[NormalDistribution[], 
         If[i == n, 50., Quantile[NormalDistribution[], i/n]]]), {i, 
       1, n}]];];
BCMRTest[data_] := Module[{},
   n*(1 - (datasorted . weigthBCMR)^2/((n - 1)/n*Variance[data]))];
LookUpQuantile\[ScriptCapitalT]n[n_, \[Alpha]_] := 
  Module[{Lup\[ScriptCapitalT]n, ntab, quantile},  (* 
   based on 5 000 000 replications *)
   ntab = {20, 30, 40, 50, 75, 100, 150, 200, 250, 300, 400, 500, 750,
      1000, 1250, 1500, 2000};
   Lup\[ScriptCapitalT]n = {{1.88`, 2.2`, 2.97`}, {2.01`, 2.35`, 
      3.19`}, {2.09`, 2.45`, 3.33`}, {2.15`, 2.52`, 3.42`}, {2.26`, 
      2.65`, 3.58`}, {2.33`, 2.72`, 3.68`}, {2.42`, 2.83`, 
      3.80`}, {2.48`, 2.9`, 3.89`}, {2.53`, 2.95`, 3.94`}, {2.56`, 
      2.98`, 3.98`}, {2.62`, 3.05`, 4.05`}, {2.66`, 3.09`, 
      4.09`}, {2.73`, 3.16`, 4.17`}, {2.77`, 3.21`, 4.22`}, {2.81`, 
      3.24`, 4.26`}, {2.84`, 3.27`, 4.28`}, {2.88`, 3.32`, 4.33`}};
   quantile = 
    Interpolation[
     Transpose[{ntab, 
       Transpose[Lup\[ScriptCapitalT]n][[
        Which[\[Alpha] == 0.10, 1, \[Alpha] == 0.05, 
         2, \[Alpha] == 0.01, 3]]]}]];
   quantile[n]];
LookUpQuantile\[ScriptCapitalP]Rtilde[n_, Sn_, \[Alpha]_] := 
  Module[{Lup\[ScriptCapitalP]Rn, quantile},  (* 
   based on 5 000 000 replications *)
   Lup\[ScriptCapitalP]Rn = {{{2.77, 2.89}, {2.64, 2.92}, {2.61, 
       2.96}, {2.78, 3.04}, {2.83, 3.04}},  (* Sn = 4 *)
     {{2.79, 3.14}, {2.79, 3.14}, {2.78, 3.07}, {2.97, 3.19}, {2.93, 
       3.18}},(* Sn = 5 *)
     {{2.93, 3.43}, {2.88, 3.30}, {2.92, 3.20}, {3.04, 3.32}, {3.05, 
       3.29}}}; (* Sn = 6 *)
   quantile = 
    Interpolation[
     Transpose[{{50, 100, 150, 300, 500}, 
       Transpose[Lup\[ScriptCapitalP]Rn[[Sn - 3]]][[
        Which[\[Alpha] == 0.10, 1, \[Alpha] == 0.05, 2]]]}]];
   quantile[n]];
PQwithBCMROracle[\[ScriptCapitalP]kvec_List, BCMRval_, c1_, c2_] := 
  Module[{endvector, Tstar, \[Pi]vecBCMR},
   \[Pi]vecBCMR = 
    Table[If[BCMRval < c1, multipliers[[j]]*c2, 
      1.5*multipliers[[j]]], {j, 1, nbbunch}];  
   Tstar = 
    Min[Position[\[ScriptCapitalP]kvec - \[Pi]vecBCMR, 
      Max[\[ScriptCapitalP]kvec - \[Pi]vecBCMR]]]; 
   endvector = Flatten[{\[ScriptCapitalP]kvec[[Tstar]], Tstar}]];
NormalityTest[data_List, Sn_, \[Alpha]level_] := 
 Module[{ tvec, F0invTvec, 
   sqrt\[Rho], \[Mu]hat, \[Sigma]hat, \[ScriptCapitalD]SMLE, \
\[ScriptL]starMLE, bunchstat, 
   BCMR, \[ScriptCapitalP]kvec, \[ScriptCapitalP]Qtilde, ctilde, 
   testoutput, Qalpha},
  init[data];
  BCMR = BCMRTest[data];
  
  tvec = 
   N[Flatten[Table[(2*i - 1)/2^(k + 1), {k, 0, Sn}, {i, 1, 2^k}]]];
  nbbunch = FactorInteger[Length[tvec] + 1][[1, 2]];
  multipliers = Table[2^i - 1, {i, 1, nbbunch}];
  F0invTvec = Quantile[NormalDistribution[], tvec];
  sqrt\[Rho] = 
   Sqrt[tvec*(1 - tvec) - 
     Map[PDF[NormalDistribution[0, 1], #] &, 
       F0invTvec]^2 - (1/Sqrt[2]*
        Map[PDF[NormalDistribution[0, 1], #] &, F0invTvec]*
        F0invTvec)^2];
  {\[Mu]hat, \[Sigma]hat} = {Mean[data], 
    StandardDeviation[data]*Sqrt[(n - 1)/n]};
  \[ScriptCapitalD]SMLE = 
   EmpiricalDistribution[(data - \[Mu]hat)/\[Sigma]hat];
  \[ScriptL]starMLE = (tvec - CDF[\[ScriptCapitalD]SMLE, F0invTvec])/
    sqrt\[Rho];
  bunchstat = 
   n*Table[Sum[\[ScriptL]starMLE[[j]]^2, {j, 2^(i - 1), 2^i - 1}], {i,
       1, nbbunch}];  
  \[ScriptCapitalP]kvec = Accumulate[bunchstat];
  testoutput = 
   PQwithBCMROracle[\[ScriptCapitalP]kvec, BCMR, 
    LookUpQuantile\[ScriptCapitalT]n[n, \[Alpha]level], 
    Which[\[Alpha]level == 0.10, 2.53, \[Alpha]level == 0.05, 3.18]];
  \[ScriptCapitalP]Qtilde = testoutput[[1]];
  Qalpha = testoutput[[2]];
  
  ctilde = LookUpQuantile\[ScriptCapitalP]Rtilde[n, Sn, \[Alpha]level];
  Print[" ##################################################"];
  Print[DisplayForm[SubscriptBox["\!\(\*
StyleBox[\"\[ScriptCapitalP]\",\nFontSize->14]\)", 
     SuperscriptBox[
      "\!\(\*OverscriptBox[\(Q\), \(~\)]\)(" <> 
       ToString[\[Alpha]level] <> ")", "\!\(\*
StyleBox[\"(\",\nFontSize->14]\)" Text[
        Style[ToString[Round[\[Mu]hat, 0.01]], 
         FontSize -> 12]] "," Text[
        Style[ToString[Round[\[Sigma]hat, 0.01]], 
         FontSize -> 12]] ")"]]], "  =  " , \[ScriptCapitalP]Qtilde, 
   "  with  \!\(\*OverscriptBox[\(Q\), \(~\)]\)(" <> 
    ToString[\[Alpha]level] <> ") = " , Qalpha];
  Print["critical value : " <> 
    "\!\(\*OverscriptBox[\(c\), \(~\)]\)(" <> ToString[n] <> ", " <> 
    ToString[\[Alpha]level] <> ") = ", ctilde];
  Print[ "Conclusion : ", 
   If [\[ScriptCapitalP]Qtilde >= ctilde, " Reject Normality", 
     "Do NOT reject Normality"] <> "  at level \[Alpha] = ", 
   ToString[\[Alpha]level*100.] <> "%" ];
  Print[" ##################################################"];]
